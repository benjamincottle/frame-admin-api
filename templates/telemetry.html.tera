{% extends 'base.html.tera' %}
{% block tel_css %}
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/jq-3.6.0/dt-1.13.4/datatables.min.css"/>
    <style>
      .highcharts-color-0 {
        fill: #0460ba;
        stroke: #0460ba;
      }
      .highcharts-color-1 {
        fill: #9696ab;
        stroke: #9696ab;
      }      
      .highcharts-background {
        fill: var(--background-color);
      }
      .highcharts-container text {
        fill: var(--text-color);
      }
      .highcharts-subtitle,
      .highcharts-credits,
      .highcharts-axis-title {
        fill-opacity: 0.7;
      }
      .highcharts-tick, 
      .highcharts-axis-line, 
      .highcharts-grid-line {
        stroke: var(--text-color);
        stroke-opacity: 0.2;
      }
      .highcharts-tooltip-box {
        fill: var(--text-color);
      }
      .highcharts-column-series rect.highcharts-point {
        stroke: var(--background-color);
      }
      input,
        select {
        color: #777777;
      }
      .imgchartrow {
        padding-left: 75px;
        padding-right: 75px;
        display: flex;
        align-items: center;
      }
      .dtable {
        padding-top: 10px;
        padding-left: 50px;
        padding-right: 50px;
      }
      .grow { flex-grow: 1; }
        .img-fluid {
        max-width: 100%;
        height: auto;
      }

    </style>    
{% endblock %}
{% block tel_js %}
    <script type="text/javascript" src="https://cdn.datatables.net/v/dt/jq-3.6.0/dt-1.13.4/datatables.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highcharts/10.3.3/highcharts.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.43/moment-timezone-with-data-10-year-range.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
{% endblock %}
{% block content %}
        <div class="imgchartrow">
          <div>
            <a href ="#" id="link" target="_">
              <canvas id="photo"></canvas>
              <img id="photosrc" src="#" style="display:none">
            </a>
          </div>
          <div id="chart" class="grow"></div>
        </div>
        <div class="dtable">
        <table id="data" class="display">
            <thead>
            <tr>
                <th>Id</th>
                <th>Timestamp</th>
                <th>Item Id</th>
                <th>Product Url</th>                
                <th>Chip ID</th>
                <th>UUID Number</th>
                <th>Battery Voltage</th>
                <th>Boot Code</th>
                <th>Error Code</th>
                <th>Return Code</th>
                <th>Write Bytes</th>
                <th>Remote Addr</th>
            </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
        </div>
{% endblock %}
{% block scripts %}
    <script>
      $(document).ready(function () {
        const table = $("#data").DataTable({
          dom: "<'row'<l><i>>" + "<'row'<f><p>>" + "<'row'<tr>>",
          ajax: "/frame_admin/telemetry_data",
          responsive: true,
          serverSide: true,
          order: [[1, "desc"]],
          ordering: false,
          searching: false,
          lengthMenu: [
            [10, 20, 50, 100, 250, 500, -1],
            [10, 20, 50, 100, 250, 500, "All"],
          ],
          pageLength: 20,
          scrollY: 700,
          scrollCollapse: true,
          language: {
            info: "Showing _START_ to _END_ of _TOTAL_ log entries",
            lengthMenu: "Display _MENU_ log entries",
            paginate: {
              first: "First",
              last: "Last",
              next: " > ",
              previous: " < ",
            },
          },
          columnDefs: [
            { targets: [0, 2, 3], visible: false },
            { targets: [0, 1, 4, 6, 7, 8, 9, 10], type: "num" },
            { targets: [2, 3, 9, 10], defaultContent: "None" },
            {
              targets: 1,
              render: function (data, type, row, meta) {
                return moment.unix(data).format("DD-MM-YYYY HH:MM");
              },
            },
            {
              targets: 5,
              render: function (data, type, row, meta) {
                return type === "display" && data.length > 20
                  ? '<span title="' + data + '">' + data.substr(0, 18) + "...</span>"
                  : data;
              },
            },
          ],
          columns: [
            { data: "id" },
            { data: "ts" },
            { data: "item_id" },
            { data: "product_url" },
            { data: "chip_id" },
            { data: "uuid_number" },
            { data: "bat_voltage" },
            { data: "boot_code" },
            { data: "error_code" },
            { data: "return_code" },
            { data: "write_bytes" },
            { data: "remote_addr" },
          ],
        });

        Highcharts.setOptions({
          lang: {
            thousandsSep: "",
          },
          plotOptions: {
            series: {
              animation: false,
            },
          },
          time: {
            timezone: "Australia/Sydney",
          },
        });          

        const chart = Highcharts.chart("chart", {
          chart: {
            zoomType: "x",
          },
          title: {
            text: "Battery Voltage (mV)",
            style: { color: "var(--text-color)", opacity: "0.5" },
          },
          legend: {
            enabled: false,
          },
          tooltip: {
            xDateFormat: "%a %e %b %Y, %l:%M%P",
            valueSuffix: "mV",
          },
          xAxis: [
            {
              type: "datetime",
              labels: {
                format: "{value: %e %b %l%P}",
                rotation: -45,
              },
              gridLineWidth: 1,
            },
          ],

          yAxis: {
            title: {
              text: "Voltage(mv)",
            },
          },
          series: [
            {
              name: "Battery Voltage",
              color: "#5e81ac",
              type: "spline",
              data: [],
            },
          ],
          credits: {
            enabled: false,
          },
          accessibility: {
            enabled: false,
          },
        });

        setTableEvents(table);
      });

      function renderChartData(table) {
        let ts;
        let bat_voltage;
        let series = Highcharts.charts[0].series[0];
        const dataArray = [];
        table.rows({ search: "applied" }).every(function () {
          const data = this.data();
          data["error_code"] == 0
            ? dataArray.push({ x: data["ts"] * 1000, y: data["bat_voltage"] })
            : dataArray.push({
                x: data["ts"] * 1000,
                y: data["bat_voltage"],
                color: "#bf616a",
              });
        });
        dataArray.sort().reverse();
        series.setData(dataArray);
      }

      function updatePhoto(src, href) {
        const img = document.getElementById("photosrc");
        const lnk = document.getElementById("link");
        const canvas = document.getElementById("photo");
        const ctx = canvas.getContext("2d");
        img.src = "image/" + src;
        lnk.href = href;
        img.onload = function() {
          canvas.width = img.width;
          canvas.height = img.height;
          ctx.drawImage(img, 0, 0);
        }
      }

      function setTableEvents(table) {
        table.on("init", () => {
          updatePhoto(table.rows(0).data()[0]["item_id"], table.rows(0).data()[0]["product_url"]);
        })
        .on('click', 'tr', function() {
          updatePhoto(table.row(this).data()["item_id"], table.row(this).data()["product_url"]);
        })
        .on('dblclick', 'td', function() {
          var cellData = table.cell(this).data();
          var tempInput = document.createElement("input");
          tempInput.style = "position: absolute; left: -1000px; top: -1000px";
          tempInput.value = cellData;
          document.body.appendChild(tempInput);
          tempInput.select();
          document.execCommand("copy");
          document.body.removeChild(tempInput);
          var notice = document.createElement("div");
          var x = event.clientX - 20;
          var y = event.clientY - 50;
          notice.style = "position: absolute; left: " + x + "px; top: " + y + "px; background-color: #d8dee9; color: #2e3440; padding: 5px; border-radius: 5px; font-size: 12px; z-index: 1000";
          notice.innerHTML = "Copied!";
          document.body.appendChild(notice);
          setTimeout(function() { 
            $(notice).fadeOut(1250, function(){ notice.remove(); });
          }, 400);
        })
        .on('mouseover', 'tr', function() {
           Highcharts.charts[0].series[0].data[table.row(this).index()].setState("hover");
           Highcharts.charts[0].tooltip.refresh(Highcharts.charts[0].series[0].points[table.row(this).index()]);
        })
        .on('mouseout', 'tr', function() {
           Highcharts.charts[0].series[0].data[table.row(this).index()].setState("normal");
           Highcharts.charts[0].tooltip.hide(Highcharts.charts[0].series[0].points[table.row(this).index()]);
        })
        .on("draw", () => {
          renderChartData(table);
        });
      }
    </script>
{% endblock %}
