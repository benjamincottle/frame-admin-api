{% extends 'base.html.tera' %}

{% block tel_css %}
  <link rel="stylesheet" type="text/css" href=href="https://cdn.datatables.net/v/dt/jq-3.6.0/dt-1.13.4/datatables.min.css"/>
{% endblock %}

{% block tel_js %}
  <script type="text/javascript" src=https://cdn.datatables.net/v/dt/jq-3.6.0/dt-1.13.4/datatables.min.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/highcharts/10.1.0/highcharts.js" integrity="sha512-8mNMOCKB2dbqlbvEAC4C4aMIioDavSLzEHF4P/A+V8ODWoaRnBz4zar7CGM8o1teyAV1sI7n6NhMLfgNZThWIA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.43/moment-timezone-with-data-10-year-range.min.js" integrity="sha512-d11VXfxQMn+sZuIgzHITdIuInr4cVRGV/uLiSI643WH/J+p4gPFYSHXRMR2v+w4Rn2TSyzJjsZjc0M7+Qd+UXw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

{% endblock %}



{% block content %}
    <h1>{% block title %}Telemetry{% endblock %}</h1>

<div>
  <div>
    <div>
        <a href="{{ product_url }}" target="_blank">
            <img src="{{ '/frame_admin/image/' ~ item_id }}">
        </a>
    </div>
    <div>
      <div id="chart"></div>
    </div>
  </div>
</div>
<br>

  <table id="data" class="table table-striped text-responsive">
    <thead>
      <tr>
        <th>timestamp</th>
        <th>chipID</th>
        <th>uuidNumber</th>
        <th>batVoltage</th>
        <th>bootCode</th>
        <th>errorCode</th>
        <th>returnCode</th>
        <th>writeBytes</th>
        <th>remote_addr</th>
      </tr>
    </thead>
    <tbody>
    </tbody>
  </table>
    <br />
    <br />
{% endblock %}

{% block scripts %}
{#
  <script>
    $(document).ready(function () {
      const table=$('#data').DataTable({
        dom: "<'row'<'col-sm-12 col-md-8'l><'col-sm-12 col-md-4'i>>" +
             "<'row'<'col-sm-12 col-md-6'f><'col-sm-12 col-md-6'p>>" +
             "<'row'<'col-sm-12'tr>>",
        ajax: '/frame_admin/telemetry_data',
        //processing: true,
        responsive: true,
        serverSide: true,
        order: [[0, 'desc']],
        ordering: false,
        searching: true,
        search: {
            smart: false,
            regex: true,
            return: false
        },
        lengthMenu: [ [10, 20, 50, 100, -1], [10, 20, 50, 100, "All"] ],
        pageLength: 20,
        scrollY: 700,
        scrollCollapse: true,
        language: {
            info: "Showing _START_ to _END_ of _TOTAL_ log entries",
            lengthMenu: "Display _MENU_ log entries",
            infoFiltered:   "(_MAX_ total)",
            search: "_INPUT_",
            searchPlaceholder: "Search...",
            paginate: {
                "first":      "First",
                "last":       "Last",
                "next":       " > ",
                "previous":   " < "
            }
        },
        columns: [
          {data: '_id', searchable: true},
          {data: 'chipID', searchable: true},
          {data: 'uuidNumber', searchable: true},
          {data: 'batVoltage', searchable: true},
          {data: 'bootCode', searchable: true},
          {data: 'errorCode', 'defaultContent': 'None', searchable: true},
          {data: 'returnCode', 'defaultContent': 'None', searchable: true},
          {data: 'writeBytes', 'defaultContent': 'None', searchable: true},
          {data: 'remote_addr', 'defaultContent': 'None', searchable: true}
        ],
      });

    const tableData=getTableData(table);
    createHighCharts(tableData);
    setTableEvents(table);
    });

    function getTableData(table) {
        let _id;
        let batVoltage;
        const dataArray=[];
        table.rows({search:"applied"}).every(function(){
            const data=this.data();
            _id  = new Date(data['_id']).getTime();
            if (data['errorCode'] == 0) {
                batVoltage = data['batVoltage'];
            }
            else {
                batVoltage = {y: data['batVoltage'], color: 'red'};
            }
            dataArray.push([_id, batVoltage])    
        });
        return dataArray
    }

    function createHighCharts(data){
        Highcharts.setOptions({
            lang: {
                thousandsSep: ""
            },
            plotOptions: {
                series: {
                    animation: false
                }
            },
            time: {
                timezone: 'Australia/Sydney'
            }
        });
        Highcharts.chart("chart",{
            chart: {
                zoomType: 'x'
            },
            title:{
                text: "Battery Voltage (mV)"
            },
            legend: {
                enabled: false,
            },
            tooltip: {
                xDateFormat: "%a %e %b %Y, %l:%M%P",
                valueSuffix: "mV"
            },
            xAxis:[
            {
                type: "datetime",
                labels: {
                    format: "{value: %e %b %l%P}",
                    rotation: -45
                },
                gridLineWidth: 1,
            }
            ],

            yAxis: {
                title: {
                    text: "Voltage(mv)"
                }
            },
            series: [
            {
                name: "Battery Voltage",
                color: "#0d6efd",
                type: "spline",
                data: data,
            }
            ],
            credits: {
                enabled: false
            },
            accessibility: {
                enabled: false
            }

          });
    }

  function setTableEvents(table) {
      table.on("draw",()=>{
        const tableData=getTableData(table);
        createHighCharts(tableData);
      });
  }

  </script>
#}
{% endblock %}
