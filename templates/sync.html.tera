{% extends 'base.html.tera' %}

{% block content %}
<script>
  function getStatus(taskID) {
    fetch(`/frame_admin/task/${taskID}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      },
    })
    .then(response => response.json())
    .then(res => {
      const html = `
        <tr>
          <td>${taskID}</td>
          <td>${res.task_action}</td>
          <td>${res.task_status}</td>
        </tr>`;
      const existingRow = document.getElementById(taskID);
      existingRow.innerHTML = html;
      const taskStatus = res.task_status;
      if (taskStatus === 'Completed' || taskStatus === 'Failed') return false;
      setTimeout(function() {
        getStatus(res.task_id);
      }, 500);
    })
    .catch(err => console.log(err));
  }

  window.onload = function() {
    if (({{ task_queue | json_encode(pretty=true) | safe }}).length == 0) {
      const html = `
        <tr>
          <td>-</td>
          <td>DB up to date</td>
          <td>No Changes</td>
        </tr>`;
        const newRow = document.getElementById('tasks').insertRow(0);
        newRow.innerHTML = html;
    } else {
      const html = `
        <tr>
          <td></td>
          <td></td>
          <td></td>
        </tr>`;
      for (const task_id of {{ task_queue | reverse | json_encode(pretty=true) | safe }}) {
        const newRow = document.getElementById('tasks').insertRow(0);
        newRow.innerHTML = html;
        newRow.id = task_id;
        getStatus(task_id);
      }
    }
  }
</script>

  <div>
    <table>
      <thead>
        <tr>
          <th>Task Id</th>
          <th>Action</th>
          <th>Status</th>
        </tr>
      </thead>
      <tbody id="tasks">
      </tbody>
    </table>
  </div>

{% endblock %}
